- name: Create VMs
  community.vmware.vmware_guest:
    cdrom:
      - controller_number: 0
        unit_number: 0
        state: present
        type: iso
        iso_path: "[{{ vcenter_iso_datastore }}] {{ vcenter_iso_name }}"
    cluster: "{{ vcenter_cluster }}"
    datacenter: "{{ vcenter_datacenter }}"
    datastore: "{{ hostvars[item].datastore }}"
    disk: "{{ hostvars[item].disk | default([]) | list }}"
    folder: "/{{ vcenter_datacenter }}/vm/{{ vcenter_folder }}"
    guest_id: rhel8_64Guest
    hostname: "{{ vcenter_hostname }}"
    hardware:
      memory_mb: "{{ hostvars[item].memory }}"
      num_cpus: "{{ hostvars[item].cores }}"
      num_cpu_cores_per_socket: "{{ hostvars[item].cores }}"
      boot_firmware: efi
    name: "{{ item }}.{{ base_domain }}"
    networks:
      - name: "{{ vcenter_network }}"
        start_connected: yes
    password: "{{ vcenter_password }}"
    state: present
    username: "{{ vcenter_username }}"
    validate_certs: no
  register: vmware_guest_results
  with_items:
    - "{{ groups[provision_group] }}"

- name: Get VM Facts
  community.vmware.vmware_guest_info:
    datacenter: "{{ vcenter_datacenter }}"
    hostname: "{{ vcenter_hostname }}"
    name: "{{ item }}.{{ base_domain }}"
    password: "{{ vcenter_password }}"
    username: "{{ vcenter_username }}"
    validate_certs: no
  register: vmware_guest_info_results
  with_items:
    - "{{ groups[provision_group] }}"

- name: Combine Applicable Disks & Hostnames into Dictionary for Easy Lookup
  ansible.builtin.set_fact:
    disk_name_dict: >-
      {{
        disk_name_dict | default([]) +
        [
          {
            'name': item,
            'disks': hostvars[item].disks | default([])
          }
        ]
      }}
  tags:
    - disks
  with_items:
    - "{{ groups[provision_group] }}"

- name: Add Disks to VMs
  community.vmware.vmware_guest_disk:
    datacenter: "{{ vcenter_datacenter }}"
    disk:
      - size_gb: "{{ item.1.size_gb }}"
        type: thin
        datastore: "{{ item.1.datastore }}"
        scsi_controller: "{{ item.1.scsi_controller }}"
        state: present
        unit_number: "{{ item.1.unit_number }}"
    folder: "/{{ vcenter_datacenter }}/vm/{{ vcenter_folder }}"
    hostname: "{{ vcenter_hostname }}"
    name: "{{ item.0.name }}.{{ base_domain }}"
    password: "{{ vcenter_password }}"
    username: "{{ vcenter_username }}"
    validate_certs: no
  with_subelements:
    - "{{ disk_name_dict }}"
    - disks
    - skip_missing: False

- name: Combine Hostname/IP/MAC into Dictionary for Easy Lookup
  ansible.builtin.set_fact:
    host_mac_list: >-
      {{
        host_mac_list | default([]) +
        [
          {
            'name': item.item,
            'mac': item.instance.hw_eth0.macaddress,
            'ip': hostvars[item.item]['ip'],
            'dns': hostvars[item.item]['dns'],
            'gateway': hostvars[item.item]['gateway']
          }
        ]
      }}
  with_items:
    - "{{ vmware_guest_info_results.results }}"

- name: Debug host_mac_list
  ansible.builtin.debug:
    var: host_mac_list
    verbosity: 1
