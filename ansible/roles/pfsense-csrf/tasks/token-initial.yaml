- name: Query pfSense for Initial CSRF Token
  ansible.builtin.uri:
    method: GET
    return_content: yes
    status_code: [200, 302]
    url: "https://{{ pfsense_hostname }}"
  register: pfsense_content

- name: Debug pfsense_content
  ansible.builtin.debug:
    var: pfsense_content
    verbosity: 2

- name: Set Initial CSRF Token
  ansible.builtin.set_fact:
    csrf_magic: "{{ pfsense_content.content | regex_search(csrf_pattern, '\\1', multiline=True) | first }}"

- name: Debug CSRF Token 
  ansible.builtin.debug:
    var: csrf_magic
    verbosity: 1

- name: Set Payload for Login
  ansible.builtin.set_fact:
    body: >-
      {{
        [
          [ "__csrf_magic",  csrf_magic ],
          [ "usernamefld", pfsense_username ],
          [ "passwordfld", pfsense_password ],
          [ "login", "Sign In"]
        ]
      }}

- name: Login to pfSense
  ansible.builtin.uri:
    body_format: form-urlencoded
    body: "{{ body }}"
    headers:
      Cookie: "{{ pfsense_content.cookies_string }}"
    method: POST
    return_content: yes
    status_code: [200, 302]
    url: "https://{{ pfsense_hostname }}"
  register: pfsense_content

- name: Debug pfsense_content
  ansible.builtin.debug:
    var: pfsense_content
    verbosity: 2

- name: Grab Updated CSRF Token
  ansible.builtin.uri:
    headers:
      Cookie: "{{ pfsense_content.set_cookie }}"
    method: GET
    return_content: yes
    status_code: [200, 302]
    url: "https://{{ pfsense_hostname }}"
  register: pfsense_content

- name: Debug pfsense_content
  ansible.builtin.debug:
    var: pfsense_content
    verbosity: 2

- name: Set Updated CSRF Token
  ansible.builtin.set_fact:
    csrf_magic: "{{ pfsense_content.content | regex_search(csrf_pattern, '\\1', multiline=True) | first }}"

- name: Debug CSRF Token 
  ansible.builtin.debug:
    var: csrf_magic
    verbosity: 1

- name: Update csrf_initial
  ansible.builtin.set_fact:
    csrf_initial: false
